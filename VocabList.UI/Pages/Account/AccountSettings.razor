@page "/account-settings"

<PageTitle>VocabList | Hesap Ayarları</PageTitle>
@using VocabList.UI.Services
@using VocabList.UI.Data.Users
@inject UserApiService _userApiService
@inject NavigationManager navigationManager
@inject Blazored.LocalStorage.ILocalStorageService localStorageService
@inject ISnackbar SnackbarService

<p>Name : @userResponseModel.Name</p>
<p>Surname : @userResponseModel.Surname</p>
<p>Username : @userResponseModel.Username</p>
<p>Email : @userResponseModel.Email</p>


@code {
    User userResponseModel = new User();
    string resultMessage = string.Empty;
    Severity severity = new();
    // public Task<AuthenticationState> AuthState { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // var authState = await AuthState;
            String accessToken = await localStorageService.GetItemAsStringAsync("AccessToken");
            accessToken = accessToken.Substring(1, (accessToken.Length - 2));

            string userId = await localStorageService.GetItemAsStringAsync("id");
            userId = userId.Substring(1, (userId.Length - 2));
            // ApiService üzerinden giriş methodu çağırılıyor..
            var response = await _userApiService.GetUserByIdAsync(userId, accessToken);
            if (response.user is not null && response.statusCode == System.Net.HttpStatusCode.OK)
            {
                userResponseModel = response.user;
            }
            else if (response.statusCode == System.Net.HttpStatusCode.Unauthorized)
            {
                severity = Severity.Warning;
                resultMessage = $"Bu sayfaya erişim yetkiniz yok!";
                ShowNotification(resultMessage, severity);
            }
            else
            {
                severity = Severity.Error;
                resultMessage = $"Kullanıcı bilgileri çekilirken beklenmeyen bir hata ile karşılaşıldı.";
                ShowNotification(resultMessage, severity);
            }
        }
        catch (Exception ex)
        {
            severity = Severity.Error;
            resultMessage = $"SUNUCU HATASI - Kullanıcı bilgileri çekilirken beklenmeyen bir hata ile karşılaşıldı.";
            ShowNotification(resultMessage, severity);
            // Console.WriteLine($"Hata oluştu: {ex.Message}");
        }
    }

    private void ShowNotification(string resultMessage, Severity severity)
    {
        SnackbarService.Add(resultMessage, severity);
    }
}
